buildscript {
    ext {
        springBootVersion = '1.5.9.RELEASE'
    }
    repositories {
//        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        maven { url 'http://itcentral.baozun.cn/nexus/content/groups/public' }
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
//apply plugin: 'com.google.cloud.tools.jib'

group = 'cn.com.hellowood'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
//    maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
    maven { url 'http://itcentral.baozun.cn/nexus/content/groups/public' }
//    mavenCentral()
}


dependencies {
    compile('org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.1')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-aop')
    compile('com.alibaba:druid-spring-boot-starter:1.1.6')

    compile('org.projectlombok:lombok:1.18.0')
    compile('io.springfox:springfox-swagger2:2.2.2')
    compile('io.springfox:springfox-swagger-ui:2.2.2')


    compile('org.springframework.boot:spring-boot-starter-log4j2:2.0.3.RELEASE') {
        // 依据组织名称+构件名称排除
        exclude group: 'org.apache.logging.log4j', module: 'log4j-slf4j-impl'
        // 为本依赖关闭依赖传递特性
//        transitive = false
    }
    compile 'com.lmax:disruptor:3.4.2'

    runtime('mysql:mysql-connector-java')
    testCompile('org.springframework.boot:spring-boot-starter-test')

//    plugins { id 'com.google.cloud.tools.jib' version '0.9.0'}
//    jib.to.image = 'gcr.io/my-project/image-built-with-jib'

}
